Not much of a standard yet!

INDENTING
----------

Use Visual Studio defaults for indenting. This can be acheived by cutting an object or function and then pasting it back in (Ctrl-X, Ctrl-v). 

HEADERS
-------

Header for files with original copyright to Ken:

// ============================================================================
// Nova. (c) 2008 Ken Reed
// (c) 2009, 2010, stars-nova
// See https://sourceforge.net/projects/stars-nova/
//
// <Description>
//
// This is free software. You can redistribute it and/or modify it under the
// terms of the GNU General Public License version 2 as published by the Free
// Software Foundation.
// ===========================================================================

or 

Header for files produced as part of the stars-nova project:

// ============================================================================
// Nova. 2009, 2010, stars-nova
// See https://sourceforge.net/projects/stars-nova/
//
// <Description>
//
// This is free software. You can redistribute it and/or modify it under the
// terms of the GNU General Public License version 2 as published by the Free
// Software Foundation.
// ===========================================================================

or

Code sourced elsewhere must state clearly in the header the source and licence terms.

Regions
-------

Files should be broken up by #region / #endregion statements. Suggested regions are:
 - Construction Initialisation Disposal
 - Event Methods
 - Interfaces
 - Operators
 - Load Save Xml
 - Utility Methods
 - Properties

Event Functions
---------------
Event functions should include the following parameter descriptions:

        /// <param name="sender">The source of the event.</param>
        /// <param name="eventArgs">A <see cref="EventArgs"/> that contains the event data.</param>


When refering to types in function headers, use the 'see cref=""' form:

        /// <param name="star">The <see cref="Star"/> being reported</param>


Xml Serialisation Functions 
---------------------------
Use this format for function headers:

FromXml() - implemented as an initialising constructor
        /// <summary>
        /// Load from XML: Initialising constructor from an XML node.
        /// </summary>
        /// <param name="node">An <see cref="XmlNode"/> within 
        /// a Nova compenent definition file (xml document).
        /// </param>

ToXml()

        /// <summary>
        /// Save: Serialise this property to an <see cref="XmlElement"/>.
        /// </summary>
        /// <param name="xmldoc">The parent <see cref="XmlDocument"/>.</param>
        /// <returns>An <see cref="XmlElement"/> representation of the Property</returns>
